<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-light.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>


    <title>Tracker for Undocumented Nostr Event Kinds</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 40px;
            background-color: #f4f4f4;
            color: #333;
        }

        h1 {
            color: #333;
        }

        .table-responsive {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        th,
        td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #4a86e8;
            color: #ffffff;
            text-transform: uppercase;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        a {
            color: #007bff;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }

        .footer {
            margin-top: 40px;
            text-align: center;
            color: #777;
        }

        @media (max-width: 768px) {
            body {
                margin: 20px;
            }

            th,
            td {
                padding: 8px 10px;
                /* Adjust table padding on smaller screens */
            }
        }

        .json-content {
            max-height: 400px;
            overflow: auto;
            white-space: pre-wrap;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
            word-wrap: break-word;
            font-size: 0.85em;
        }

        .toggle-indicator {
            cursor: pointer;
        }

        th {
            cursor: pointer;
        }

        .sort-indicator {
            margin-left: 5px;
        }

        .hidden {
            display: none;
        }
    </style>
</head>

<body>
    <h1>Tracker for Undocumented Nostr Event Kinds</h1>
    <p>This service samples events from the Nostr network and keeps track of kinds that are not documented by any NIPs
        (Nostr Improvement Proposals). This can be useful for developers or researchers aiming to add a new kind and
        want to choose a number that
        minimizes the chances of clashing with someone else exploring a new idea.</p>
    <p><strong>Note:</strong> Kinds not seen for a month are removed from the list.</p>

    <div class="table-responsive">
        <table>
            <thead>
                <tr>
                    <th>Kind <span class="sort-indicator"></span></th>
                    <th>Latest Event Sampled <span class="sort-indicator"></span></th>
                    <th>Seen Times <span class="sort-indicator"></span></th>
                    <th>Last Seen At <span class="sort-indicator"></span></th>
                    <th class="hidden"></th>
                </tr>
            </thead>
            <tbody>
                {{#each stats}}
                <tr class="row-toggle" data-event-json='{{json this.[1].event}}'>
                    <td> <a
                            href="https://github.com/search?q=repo%3Anostr-protocol%2Fnips++%2Fkind.*%5Cb{{this.[0]}}%5Cb%2F&type=code">{{this.[0]}}</a>
                    </td>
                    <td>
                        <span class="toggle-indicator"><i class="fas fa-chevron-down"></i></span>
                        <a href="#" class="event-link">{{this.[1].event.id}}</a>

                    </td>
                    <td>{{this.[1].count}}</td>
                    <td>{{date_relative this.[1].last_updated}}</td>
                    <td class="hidden">{{this.[1].last_updated }}</td>
                </tr>
                <tr class="json-display-row" style="display: none;">
                    <td colspan="4" class="json-content"></td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
    <div class="footer">
        <p>For feedback or inquiries, feel free to reach out at Nostr:</p>
        <p><a href="nop: daniel@nos.social" style="color: #007bff; text-decoration: none;"><i
                    class="fas fa-paper-plane"></i> daniel@nos.social</a></p>
    </div>

    <script>

        document.addEventListener('DOMContentLoaded', () => {
            const getCellValue = (tr, idx) => tr.children[idx] ? tr.children[idx].innerText || tr.children[idx].textContent : '';
            const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
                v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
            )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));

            document.querySelectorAll('th').forEach(th => {
                let indicator = th.querySelector('.sort-indicator');
                th.addEventListener('click', function () {
                    const table = th.closest('table');
                    const tbody = table.querySelector('tbody');
                    let index = Array.from(th.parentNode.children).indexOf(th);

                    // For now we just hardcode that if we select the human readable column we are
                    // in fact sorting through the column that contains the timestamp number
                    if (index === 3) {
                        index = 4;
                    }

                    Array.from(tbody.querySelectorAll('tr'))
                        .sort(comparer(index, this.asc = !this.asc))
                        .forEach(tr => tbody.appendChild(tr));

                    // Clear existing indicators
                    document.querySelectorAll('.sort-indicator').forEach(indicator => {
                        indicator.textContent = '';
                    });

                    // Set the current sort indicator
                    indicator.textContent = this.asc ? '↑' : '↓';
                });
            });

            document.querySelectorAll('.row-toggle').forEach((element) => {
                const link = element.querySelector('.event-link');
                link.addEventListener('click', (event) => {
                    event.preventDefault();
                    const jsonData = element.getAttribute('data-event-json');
                    const jsonDisplayRow = element.nextElementSibling;
                    const jsonContentCell = jsonDisplayRow.querySelector('.json-content');
                    const toggleIndicator = element.querySelector('.fas');

                    if (jsonDisplayRow.style.display === 'none') {
                        jsonContentCell.innerHTML = `<pre><code class="json">${jsonData}</code></pre>`;
                        hljs.highlightElement(jsonContentCell.querySelector('code'));
                        jsonDisplayRow.style.display = '';
                        toggleIndicator.className = 'fas fa-chevron-up';
                    } else {
                        jsonDisplayRow.style.display = 'none';
                        toggleIndicator.className = 'fas fa-chevron-down';
                    }
                });
            });
        });
    </script>
</body>

</html>