<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/atom-one-light.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>


    <title>Tracker for Undocumented Nostr Event Kinds</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 40px;
            background-color: #f4f4f4;
            color: #333;
        }

        h1 {
            color: #333;
        }

        .table-responsive {
            overflow-x: auto;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        th,
        td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #4a86e8;
            color: #ffffff;
            text-transform: uppercase;
        }

        tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        a {
            color: #007bff;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }

        .footer {
            margin-top: 40px;
            text-align: center;
            color: #777;
        }

        @media (max-width: 768px) {
            body {
                margin: 20px;
            }

            th,
            td {
                padding: 8px 10px;
            }
        }

        .json-content {
            max-width: 1px;
            max-height: 400px;
            overflow: auto;
            white-space: pre-wrap;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            padding: 10px;
            border-radius: 5px;
            word-wrap: break-word;
            font-size: 0.85em;
        }

        .toggle-indicator {
            cursor: pointer;
        }

        th {
            cursor: pointer;
        }

        .sort-indicator {
            margin-left: 5px;
        }

        .hidden {
            display: none;
        }
    </style>
</head>

<body>
    <h1>Tracker for Undocumented Nostr Event Kinds</h1>
    <p>
        This service samples events from the Nostr network and keeps track of kinds that are not documented by any NIPs
        (Nostr Improvement Proposals). This can be useful for developers or researchers aiming to add a new kind and
        want to choose a number that minimizes the chances of clashing with someone else exploring a new idea.
    </p>
    <p>
        Beyond its utility for avoiding clashes, this tracker offers a unique window into the innovative ways people are
        engaging with the network. It's not just a tool for developers—it's also a fun way to discover emerging trends,
        niche uses, and the creative ideas circulating within the Nostr community, even before they become formalized in
        NIPs.
    </p>
    <p><strong>Note:</strong> Kinds not seen for a month are removed from the list.</p>

    <div class="table-responsive">
        <table>
            <thead>
                <tr>
                    <th>Kind <span class="sort-indicator"></span></th>
                    <th>Latest Event Sampled <span class="sort-indicator"></span></th>
                    <th>Seen Times <span class="sort-indicator"></span></th>
                    <th>Last Seen At <span class="sort-indicator"></span></th>
                    <th class="hidden"></th>
                </tr>
            </thead>
            <tbody>
                {{#each stats}}
                <tr class="row-toggle" data-event-json='{{json this.[1].event}}'>
                    <td> <a
                            href="https://github.com/search?q=repo%3Anostr-protocol%2Fnips++%2Fkind.*%5Cb{{this.[0]}}%5Cb%2F&type=code">{{this.[0]}}</a>
                    </td>
                    <td class="toggle-indicator">
                        <span><i class="fas fa-chevron-down"></i></span>
                        <a href="#" class="event-link">{{this.[1].event.id}}</a>
                    </td>
                    <td>{{this.[1].count}}</td>
                    <td>{{date_relative this.[1].last_updated}}</td>
                    <td class="hidden">{{this.[1].last_updated }}</td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>
    <div class="footer">
        <p>For feedback or inquiries, feel free to reach out at Nostr:</p>
        <p><a href="nop: daniel@nos.social" style="color: #007bff; text-decoration: none;"><i
                    class="fas fa-paper-plane"></i> daniel@nos.social</a></p>
    </div>

    <script>


        document.addEventListener('DOMContentLoaded', () => {
            const getCellValue = (tr, idx) => tr.children[idx] ? tr.children[idx].innerText || tr.children[idx].textContent : '';
            const comparer = (idx, asc) => (a, b) => ((v1, v2) =>
                v1 !== '' && v2 !== '' && !isNaN(v1) && !isNaN(v2) ? v1 - v2 : v1.toString().localeCompare(v2)
            )(getCellValue(asc ? a : b, idx), getCellValue(asc ? b : a, idx));

            document.querySelectorAll('th').forEach(th => {
                let indicator = th.querySelector('.sort-indicator');
                th.addEventListener('click', function () {
                    const table = th.closest('table');
                    const tbody = table.querySelector('tbody');


                    const jsonRows = tbody.querySelectorAll('.json-display-row');
                    jsonRows.forEach(row => {
                        row.remove();
                    });

                    let index = Array.from(th.parentNode.children).indexOf(th);

                    if (index === 3) {
                        index = 4;
                    }

                    Array.from(tbody.querySelectorAll('tr'))
                        .sort(comparer(index, this.asc = !this.asc))
                        .forEach(tr => tbody.appendChild(tr));

                    document.querySelectorAll('.sort-indicator').forEach(indicator => {
                        indicator.textContent = '';
                    });

                    indicator.textContent = this.asc ? '↑' : '↓';
                });
            });
            document.querySelectorAll('pre code').forEach((block) => {
                hljs.highlightElement(block);
            });

            document.querySelectorAll('.row-toggle .toggle-indicator').forEach(toggle => {
                toggle.addEventListener('click', (event) => {
                    event.stopPropagation();
                    const row = toggle.closest('.row-toggle');
                    let nextRow = row.nextElementSibling;
                    const jsonData = row.getAttribute('data-event-json');

                    if (nextRow && nextRow.classList.contains('json-display-row')) {
                        nextRow.style.display = nextRow.style.display === 'none' ? '' : 'none';
                    } else {
                        const detailRow = document.createElement('tr');
                        detailRow.className = 'json-display-row';
                        const detailCell = document.createElement('td');
                        detailCell.colSpan = 5;
                        detailCell.classList.add('json-content');
                        detailCell.innerHTML = `<pre><code class="json">${jsonData}</code></pre>`;
                        detailRow.appendChild(detailCell);
                        row.parentNode.insertBefore(detailRow, nextRow);

                        hljs.highlightElement(detailCell.querySelector('code'));
                    }
                });
            });

        });
    </script>
</body>

</html>